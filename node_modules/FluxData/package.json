{
  "name": "FluxData",
  "version": "0.1.1",
  "description": "Event based Data Channeling for live systems",
  "homepage": "https://github.com/chromecide/FluxData",
  "keywords": [
    "FluxData",
    "events",
    "event-driven",
    "framework",
    "channels",
    "channel",
    "FluxData-Channel"
  ],
  "author": {
    "name": "Justin Pradier",
    "email": "chromecide@chromecide.com",
    "url": "http://chromecide.com/"
  },
  "dependencies": {
    "eventemitter2": "0.4.x",
    "request": "2.12.x",
    "requirejs": "2.1.x",
    "amdefine": "0.0.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chromecide/FluxData.git"
  },
  "main": "index.js",
  "readme": "FluxData\n========\n\nMixin based Distributed Event Engine\n\nUsage (NodeJS)\n---\n\n\nInstall FluxData\n\n```\nnpm install chromecide/FluxData\n```\n\nBasic Node\n\n```\nvar FluxData = require('FluxData');\n\nvar myNode = new FluxData.Channel({});\n\nmyNode.on('MyEvent', function(data){\n\tconsole.log('My Event Fired');\n\tconsole.log(data);\n});\n\n```\n\nMixing in Functionality\n\n```\nvar requirejs = require('requirejs');\n\n//create a static web server node at the current working directory\n\nvar FluxData = require('FluxData');\n\nvar myNode = new FluxData.Channel({\n\tmixins:[\n\t\t{\n\t\t\ttype:'FluxData/http/static_server',\n\t\t\twebroot: process.cwd(),\n\t\t\tport: 8080\t\t\t\n\t\t}\n\t]\n});\n\n```\n\nIncluding external Mixins\n\n```\nvar FluxData = require('FluxData');\n\nvar myMixin = require('/path/to/my/mixin');\n\nvar newNode = new FluxData.Channel({\n\tmixins:[\n\t\t{\n\t\t\ttype: myMixin\n\t\t}\n\t]\n});\n```\n\nOR\n\n```\nvar FluxData = require('FluxData');\n\nvar myMixin = require('/path/to/my/mixin');\n\nFluxData.registerMixin('myMixin', myMixin);\n\nvar newNode = new FluxData.Channel({\n\tmixins:[\n\t\t{\n\t\t\ttype: 'myMixin'\n\t\t}\n\t]\n});\n```\n\nDefining a Mixin (taken from /lib/mixins/_blank.js)\n\n```\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function(){\n    var mixin = {\n        //called when first mixing in the functionality\n        init: function(cfg, callback){\n            var self = this;\n            var errs = false;\n            \n            for(var key in cfg){\n                self.set(key, cfg[key]);\n            }\n\n            \n\n            if(callback){\n                callback(errs, self);\n            }\n        },\n        //called when something is published to this channel\n        publish: function(topic, data){\n            var self = this;\n        }\n    };\n    \n    return mixin;\n});\n\n```\n\nUsage (Browser)\n---\n\nCreate a FluxData Static Server\n\n```\nvar FluxData = require('../../FluxData');\n\nvar static_server = new FluxData.Channel({\n    mixins:[\n        {\n            type: 'FluxData/http/static_server',\n            port: 8080,\n            webroot: __dirname,\n            //include the path to your FluxData files\n            paths: {\n                FluxData: __dirname+'/node_modules/FluxData'\n            }\n        }\n    ]\n});\n```\n\nIndex.html\n\n```\n<html>\n\t<head>\n\t\t<script src='require.js'></script>\n\t\t<script>\n\t\t\trequire(['FluxData'], function(FluxData){\n\t\t\t\tvar myChannel = new FluxData.Channel({});\n\t\t\t});\n\t\t</script>\n\t</head>\n\t<body>\n\t\n\t</body>\n</html>\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/chromecide/FluxData/issues"
  },
  "_id": "FluxData@0.1.1",
  "dist": {
    "shasum": "ab00bddeb90ba7e8e4120f74392f0311a4664334"
  },
  "_resolved": "git://github.com/chromecide/FluxData#4b7208aa11b301d50b53edd655e43bf8e6fba86c",
  "_from": "git://github.com/chromecide/FluxData",
  "_fromGithub": true
}
